{
    "file":"resend-if-transfer-too-big.json",
    "description":"Adds --max-transaction-size option to simplewallet and walletd + precompiled",
    "required":[ "core/bytecoin.json" ],
    "files": [ 
        {
            "path":"/src/Wallet/WalletGreen.cpp",
            "changes": [
                {
                    "action":"add_above",
                    "marker":"const auto& ba = tx->getTransactionData();",
                    "parameters": {
                        "replace_text":[
                            " for (int i = 0; i < 10; i++) {"
                        ]
                    }
                },
                {
                    "action":"add_bellow",
                    "marker":"const auto& ba = tx->getTransactionData();",
                    "parameters": {
                        "replace_text":[
                            "  std::cout << \"tx_size: \" << ba.size() << std::endl;"
                        ]
                    }
                },
                {
                    "action":"replace",
                    "marker":"throw std::system_error(make_error_code(error::TRANSACTION_SIZE_TOO_BIG));",
                    "parameters": {
                        "replace_text":[
                            "    std::cout << \"TRANSACTION_SIZE_TOO_BIG  i: \" << i << std::endl;",
                            "    if (i == 9) {",
                            "      std::cout << \"TRANSACTION_SIZE_TOO_BIG  error throw next\" << std::endl;",
                            "      throw std::system_error(make_error_code(error::TRANSACTION_SIZE_TOO_BIG));",
                            "    }"
                        ]
                    }
                },
                {
                    "action":"add_bellow",
                    "marker":"throw std::system_error(ec);",
                    "parameters": {
                        "replace_text":[
                            "  }"
                        ]
                    }
                }
            ]
        },
        {
            "path":"/src/WalletLegacy/WalletTransactionSender.cpp",
            "changes": [
                {
                    "action":"add_above",
                    "marker":"WalletLegacyTransaction& transaction = m_transactionsCache.getTransaction(context->transactionId);",
                    "parameters": {
                        "replace_text":[
                            " for (int i = 0; i < 5; i++) {"
                        ]
                    }
                },
                {
                    "action":"add_above",
                    "marker":"getObjectHash(tx, transaction.hash);",
                    "parameters": {
                        "replace_text":[
                            "std::cout << \"tx_size: \" << getObjectBinarySize(tx) << std:: endl;"
                        ]
                    }
                },
                {
                    "action":"add_bellow",
                    "marker":"return std::make_shared<WalletRelayTransactionRequest>(",
                    "parameters": {
                        "replace_text":[
                            "}"
                        ]
                    }
                }
            ]
        }
    ]
}